{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "index.js",
    "node_modules/mini-unique-id/index.cjs.js",
    "node_modules/process/browser.js"
  ],
  "names": [],
  "mappings": "AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACp
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar uniqueId = _interopDefault(require('mini-unique-id'));\n\n// These functions are lifted directly from https://www.npmjs.com/package/path-browserify\n// I have only included the ones that we are currently using - if we need any more in future: go get 'em!\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function splitPath(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\nfunction filter(xs, f) {\n  if (xs.filter) return xs.filter(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    if (f(xs[i], i, xs)) res.push(xs[i]);\n  }\n  return res;\n}\n\nvar substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {\n  return str.substr(start, len);\n} : function (str, start, len) {\n  if (start < 0) start = str.length + start;\n  return str.substr(start, len);\n};\n\nfunction resolve() {\n  var resolvedPath = '';\n  var resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = i >= 0 ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\nfunction normalize(path) {\n  var absolute = isAbsolute(path);\n  var trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function (p) {\n    return !!p;\n  }), !absolute).join('/');\n\n  if (!path && !absolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (absolute ? '/' : '') + path;\n}\n\nfunction isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\nfunction join() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return normalize(filter(paths, function (p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n}\n\nfunction dirname(path) {\n  var result = splitPath(path);\n  var root = result[0];\n  var dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\nfunction extname(path) {\n  return splitPath(path)[3];\n}\n\nfunction items(xml, item, attributes, mediaTypeWhitelist) {\n  return Array.prototype.filter.call(xml.querySelectorAll(item), function (item) {\n    return !mediaTypeWhitelist || mediaTypeWhitelist.indexOf(item.getAttribute(attributes.mediaType)) > -1;\n  }).map(function (item) {\n    var ret = {};\n\n    Object.keys(attributes).forEach(function (key) {\n      try {\n        ret[key] = item.getAttribute(attributes[key]);\n      } catch (exception) {\n        ret[key] = undefined;\n        console.error(\"Can't get \" + key + \" for \" + item + \" on \" + tag + \".\");\n      }\n    });\n\n    return ret;\n  });\n}\n\nfunction normalise(list) {\n  var byId = {};\n  var items = list.map(function (item) {\n    byId[item.id] = item;\n    return item.id;\n  });\n\n  return {\n    byId: byId,\n    items: items\n  };\n}\n\nvar ATTRIBUTES = {\n  href: 'href',\n  id: 'id',\n  mediaType: 'media-type',\n  mediaOverlay: 'media-overlay',\n  properties: 'properties'\n};\nvar ITEM = 'item';\nvar TAG = 'manifest';\n\nfunction manifest(rootXml, mediaTypeWhitelist) {\n  return normalise(items(rootXml.querySelector(TAG), ITEM, ATTRIBUTES, mediaTypeWhitelist));\n}\n\n// TODO\n// - content in the properties attribute may need to be parsed\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L420-L487\n\nfunction coverHref(manifest) {\n  var item = manifest.byId['cover-item'] || manifest.byId['cover'] || manifest.byId[Object.keys(manifest.byId).find(function (id) {\n    return (/cover-image/.test(manifest.byId[id].properties)\n    );\n  })];\n\n  if (item) {\n    return item.href;\n  }\n}\n\n// TODO\n// - Support ePub2 coverHref\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L395-L417\n\nvar ATTRIBUTES$1 = {\n  OPTIONAL: ['creator', 'contributor', 'coverage', 'creator', 'date', 'description', 'format', 'publisher', 'relation', 'rights', 'source', 'subject', 'type'],\n  REQUIRED: ['identifier', 'language', 'title'],\n  PROPERTIES: {\n    mediaActiveClass: 'media:active-class',\n    mediaDuration: 'media:duration',\n    mediaNarrator: 'media:narrator'\n  }\n};\nvar NS = '*';\nvar META = 'meta';\nvar TAG$1 = 'metadata';\n\nfunction metadata(rootXml, manifest) {\n  var ret = {};\n  var xml = rootXml.querySelector(TAG$1);\n\n  function attribute(attr, required) {\n    try {\n      ret[attr] = xml.getElementsByTagNameNS(NS, attr)[0].textContent;\n    } catch (exception) {\n      if (required) {\n        ret[attr] = undefined;\n        console.error('Can\\'t get required attribute \\'' + attr + '\\' on metadata.');\n      }\n    }\n  }\n\n  ATTRIBUTES$1.OPTIONAL.forEach(function (attr) {\n    return attribute(attr, false);\n  });\n  ATTRIBUTES$1.REQUIRED.forEach(function (attr) {\n    return attribute(attr, true);\n  });\n\n  ret.coverHref = coverHref(manifest);\n\n  var mediaDurationXml = xml.querySelectorAll(META + '[property=\\'' + ATTRIBUTES$1.PROPERTIES.mediaDuration + '\\']');\n  if (mediaDurationXml.length) {\n    ret.mediaOverlayDurations = [];\n    ret.mediaDuration;\n    Array.prototype.forEach.call(mediaDurationXml, function (item) {\n      var refines = item.getAttribute('refines');\n\n      if (refines) {\n        // If refines is specified, it's a media overlay duration\n        ret.mediaOverlayDurations.push({\n          refines: item.getAttribute('refines'),\n          clockValue: item.textContent\n        });\n      } else {\n        // Otherwise it's the whole publication's duration\n        ret.mediaDuration = item.textContent;\n      }\n    });\n  }\n\n  var mediaActiveClassXml = xml.querySelector(META + '[property=\\'' + ATTRIBUTES$1.PROPERTIES.mediaActiveClass + '\\']');\n  if (mediaActiveClassXml) {\n    ret.mediaActiveClass = mediaActiveClassXml.textContent;\n  }\n\n  var mediaNarratorXml = xml.querySelectorAll(META + '[property=\\'' + ATTRIBUTES$1.PROPERTIES.mediaNarrator + '\\']');\n  if (mediaNarratorXml.length) {\n    ret.mediaNarrator = Array.prototype.map.call(mediaNarratorXml, function (item) {\n      return item.textContent;\n    });\n  }\n\n  return ret;\n}\n\n// TODO\n// - refactor!\n// - updateMetadataWithIBookProperties\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L96-L130\n// - refinements\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L262-L279\n//   http://www.idpf.org/epub/301/spec/epub-publications.html#sec-metadata-elem\n// - rendition\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L241-L261\n// - more media attributes?\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L310-L322\n\nvar ROOT_FILE = 'rootfile';\nvar FULL_PATH = 'full-path';\n\nfunction rootFile(containerXml) {\n  var packageDocumentPath = containerXml.querySelector(ROOT_FILE).getAttribute(FULL_PATH);\n  if (extname(packageDocumentPath) === '.opf') {\n    return packageDocumentPath;\n  } else {\n    throw new Error('no .opf file could be found in META-INF/container.xml');\n  }\n}\n\nvar ATTRIBUTES$2 = {\n  id: 'idref',\n  linear: 'linear',\n  properties: 'properties'\n};\nvar ITEM$1 = 'itemref';\nvar TAG$2 = 'spine';\nvar YES = 'yes';\n\nfunction spine(rootXml, tocItem) {\n  return normalise(items(rootXml.querySelector(TAG$2), ITEM$1, ATTRIBUTES$2).filter(function (item) {\n    return typeof tocItem === 'undefined' ? true : tocItem.id !== item.id;\n  }).map(function (item) {\n    return {\n      id: item.id,\n      linear: item.linear === YES,\n      properties: item.properties\n    };\n  }));\n}\n\n// TODO\n// - page-progression-direction\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L68\n\nfunction getTocItem(manifest) {\n  var tocManifestId = manifest.items.find(function (id) {\n    return (/nav/.test(manifest.byId[id].properties)\n    );\n  });\n  return manifest.byId[tocManifestId];\n}\n\n// Spec says we need to select the TOC using the epub:type=toc property\nvar TAG$3 = 'nav[epub\\\\\\:type~=toc]';\nvar ROOT = '__root__';\n\nfunction toc(tocHtml, manifest, spine) {\n  var byId = {};\n  var byManifestId = {};\n  var items$$1 = [];\n\n  var tocItem = getTocItem(manifest);\n  var tocItemPath = dirname(tocItem.href);\n  parse(tocHtml.querySelector(TAG$3), ROOT);\n\n  function parse(snippet, id, href, label, parentId) {\n    var level = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n    var hrefWithoutHash = href && join(tocItemPath, href.split('#')[0]);\n    var manifestId = Object.keys(manifest.byId).find(function (id) {\n      return manifest.byId[id].href === hrefWithoutHash;\n    });\n\n    // Don't include the TOC reference item in the spine\n    if (tocItem.id !== manifestId) {\n      var ol = snippet.querySelector('ol');\n      var childNodes = [];\n\n      if (ol) {\n        childNodes = Array.prototype.filter.call(ol.children, function (node) {\n          return node.tagName === 'LI';\n        }).map(function (node) {\n          var link = node.querySelector('a');\n          var childId = uniqueId();\n          return parse(node, childId, link.getAttribute('href'), link.textContent, id, level + 1) && childId;\n        }).filter(function (id) {\n          return id;\n        });\n      }\n\n      var isLeaf = childNodes.length === 0;\n\n      // We mainly care about leafs as those are the ones that contain pages and are thus open\n      if (isLeaf) {\n        byManifestId[manifestId] = id;\n        items$$1.push(id);\n      }\n\n      byId[id] = {\n        childNodes: childNodes,\n        id: id,\n        isLeaf: isLeaf,\n        href: hrefWithoutHash,\n        label: label,\n        level: level,\n        linear: snippet.getAttribute('linear'),\n        manifestId: manifestId,\n        parentId: parentId\n      };\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return {\n    byId: byId,\n    byManifestId: byManifestId,\n    items: items$$1\n  };\n}\n\n// TODO\n// - page-progression-direction\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L68\n\n/* global DOMParser */\n\nvar HTML = 'text/html';\nvar XML = 'text/xml';\nvar domParser = new DOMParser();\n\nfunction parseRaw(markup) {\n  var contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : XML;\n\n  return domParser.parseFromString(markup, contentType);\n}\n\nfunction parseRawHtml(markup) {\n  return parseRaw(markup, HTML);\n}\n\nfunction parseRawXml(markup) {\n  return parseRaw(markup, XML);\n}\n\nfunction xml(uri) {\n  return fetch(uri, { credentials: 'include' }).then(function (res) {\n    return res.text();\n  }).then(function (body) {\n    return parseRawXml(body);\n  });\n}\n\nvar CONTAINER_XML = 'META-INF/container.xml';\n\nfunction containerXml(uri) {\n  var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CONTAINER_XML;\n\n  return xml(uri + '/' + source);\n}\n\nfunction rootXml(uri, source) {\n  return xml(uri + '/' + source);\n}\n\nvar TOC_HTML = 'toc.xhtml';\nvar OPF_DIRECTORY = 'OPS';\n\nfunction containerHtml(uri) {\n  var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TOC_HTML;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : OPF_DIRECTORY;\n\n  return fetch(uri + '/' + path + '/' + source, { credentials: 'include' }).then(function (res) {\n    return res.text();\n  }).then(function (body) {\n    return parseRawHtml(body);\n  });\n}\n\nfunction parse(uri) {\n  var manifestMediaTypeWhitelist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var packageDirectory = void 0;\n\n  return containerXml(uri).then(function (containerXml$$1) {\n    return rootFile(containerXml$$1);\n  }).then(function (rootFile$$1) {\n    packageDirectory = dirname(rootFile$$1);\n    return rootXml(uri, rootFile$$1);\n  }).then(function (rootXml$$1) {\n    var manifest$$1 = manifest(rootXml$$1, manifestMediaTypeWhitelist);\n    var tocItem = getTocItem(manifest$$1);\n    var spine$$1 = spine(rootXml$$1, tocItem);\n\n    return containerHtml(uri, tocItem.href, packageDirectory).then(function (tocHtml) {\n      return {\n        packageDirectory: packageDirectory,\n        manifest: manifest$$1,\n        metadata: metadata(rootXml$$1, manifest$$1),\n        spine: spine$$1,\n        toc: toc(tocHtml, manifest$$1, spine$$1)\n      };\n    });\n  }).catch(function (err) {\n    var nextErr = err;\n\n    if (/Cannot read property 'getAttribute' of null/.test(err.message)) {\n      nextErr = new Error('We couldn\\'t find a book at ' + uri + '.');\n    }\n\n    throw nextErr;\n  });\n}\n\nfunction manifestItemXml(uri, source, path) {\n  return xml(uri + '/' + path + '/' + source);\n}\n\n// this function will return DOM parsed nodes that are not comments or text nodes containing whitespace\nfunction canIgnoreNode(node) {\n  return !(node.nodeType === window.Node.COMMENT_NODE || node.nodeType === window.Node.TEXT_NODE && !/[^\\t\\n\\r ]/.test(node.textContent));\n}\n\nvar HOURS = 'h';\nvar MINUTES = 'min';\nvar MILLISECONDS = 'ms';\nvar SECONDS = 's';\nvar TIME_SEPARATOR = ':';\n\n// https://github.com/dariocravero/readium-js/blob/master/src/epub/smil-document-parser.js#L213-L243\n// parse the timestamp and return the value in seconds\n// supports this syntax:\n// http://idpf.org/epub/30/spec/epub30-mediaoverlays.html#app-clock-examples\nfunction parseClockValue(value) {\n  if (!value) return 0;\n\n  var hours = 0;\n  var mins = 0;\n  var secs = 0;\n\n  var index = {\n    hours: value.indexOf(HOURS),\n    mins: value.indexOf(MINUTES),\n    ms: value.indexOf(MILLISECONDS),\n    secs: value.indexOf(SECONDS)\n  };\n\n  if (index.mins !== -1) {\n    mins = parseFloat(value.substr(0, index.mins), 10);\n  } else if (index.ms !== -1) {\n    var ms = parseFloat(value.substr(0, index.ms), 10);\n    secs = ms / 1000;\n  } else if (index.secs !== -1) {\n    secs = parseFloat(value.substr(0, index.secs), 10);\n  } else if (index.hours !== -1) {\n    hours = parseFloat(value.substr(0, index.hours), 10);\n  } else {\n    // parse as hh:mm:ss.fraction\n    // this also works for seconds-only, e.g. 12.345\n    var arr = value.split(TIME_SEPARATOR);\n    secs = parseFloat(arr.pop(), 10);\n    if (arr.length > 0) {\n      mins = parseFloat(arr.pop(), 10);\n      if (arr.length > 0) {\n        hours = parseFloat(arr.pop(), 10);\n      }\n    }\n  }\n\n  return hours * 3600 + mins * 60 + secs;\n}\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar AUDIO = 'audio';\nvar BODY = 'body';\nvar PAR = 'par';\nvar SEQ = 'seq';\nvar TAG$4 = 'smil';\nvar TEXT = 'text';\nvar VERSION = 'version';\n\n// TODO the parsing of the `clockValue` could be deferred\n// up to when its used. We put it in here to comply with Readium's data structure needs.\nfunction smilData(xml, id) {\n  var refinement = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var baseUri = arguments[3];\n\n  var smilXml = xml.querySelector(TAG$4);\n\n  var ret = {\n    body: parse$1(smilXml.querySelector(BODY), baseUri),\n    id: id,\n    version: smilXml.getAttribute(VERSION)\n  };\n\n  if (refinement.clockValue) {\n    ret.duration = parseClockValue(refinement.clockValue);\n  }\n  return ret;\n}\n\nfunction getValidChildNodes(xml) {\n  return Array.prototype.filter.call(xml.childNodes, canIgnoreNode);\n}\n\nfunction attrs(itemXml) {\n  var node = NODES[itemXml.nodeName];\n  var ret = {};\n\n  function attr(key, attr, required) {\n    try {\n      var val = itemXml.getAttribute(attr);\n      if (val) {\n        ret[key] = val;\n      } else {\n        throw Exception('Attribute tag ' + attr + ' exists but there\\'s no value.');\n      }\n    } catch (exception) {\n      if (required) {\n        ret[key] = false;\n        console.error('Can\\'t get required attribute \\'' + attr + '\\' for key \\'' + key + '\\' on smil.', itemXml);\n        console.error(exception);\n      }\n    }\n  }\n\n  Object.keys(node.OPTIONAL).forEach(function (key) {\n    return attr(key, node.OPTIONAL[key], false);\n  });\n  Object.keys(node.REQUIRED).forEach(function (key) {\n    return attr(key, node.REQUIRED[key], true);\n  });\n\n  return ret;\n}\n\nfunction resolvePath(baseUri, relativePath) {\n  return resolve(baseUri, relativePath);\n}\n\nfunction parse$1(xml, baseUri) {\n  var ret = void 0;\n\n  switch (xml.nodeName) {\n    case AUDIO:\n      ret = attrs(xml);\n      if (ret.src && !isAbsolute(ret.src)) {\n        ret.src = resolvePath(baseUri, ret.src);\n      }\n      ret.clipBegin = ret.clipBegin && parseClockValue(ret.clipBegin);\n      ret.clipEnd = ret.clipEnd && parseClockValue(ret.clipEnd);\n      break;\n\n    case PAR:\n      ret = attrs(xml);\n      // handle the fact that audio tags are optional\n      var audioTag = xml.querySelector(AUDIO);\n      if (audioTag) {\n        ret.audio = parse$1(audioTag, baseUri);\n      }\n      ret.isPar = true;\n      ret.text = parse$1(xml.querySelector(TEXT), baseUri);\n      break;\n\n    case BODY:\n    case SEQ:\n      ret = attrs(xml);\n      ret.childNodes = getValidChildNodes(xml).map(function (arr) {\n        return parse$1(arr, baseUri);\n      });\n      ret.isPar = false;\n      break;\n\n    case TEXT:\n      ret = attrs(xml);\n      if (ret.src && !isAbsolute(ret.src)) {\n        ret.src = resolvePath(baseUri, ret.src);\n      }\n\n      var _ret$src$split = ret.src.split('#'),\n          _ret$src$split2 = slicedToArray(_ret$src$split, 2),\n          srcFile = _ret$src$split2[0],\n          srcFragmentId = _ret$src$split2[1];\n\n      ret.srcFile = srcFile;\n      ret.srcFragmentId = srcFragmentId;\n      break;\n\n    default:\n      break;\n  }\n\n  return ret;\n}\n\nvar NODES = {\n  'audio': {\n    REQUIRED: {\n      src: 'src'\n    },\n    OPTIONAL: {\n      id: 'id',\n      clipBegin: 'clipBegin',\n      clipEnd: 'clipEnd'\n    }\n  },\n  'body': {\n    REQUIRED: {},\n    OPTIONAL: {\n      id: 'id',\n      textref: 'epub:textref',\n      type: 'epub:type'\n    }\n  },\n  'par': {\n    REQUIRED: {},\n    OPTIONAL: {\n      id: 'id',\n      textref: 'epub:textref',\n      type: 'epub:type'\n    }\n  },\n  'seq': {\n    REQUIRED: {\n      textref: 'epub:textref'\n    },\n    OPTIONAL: {\n      id: 'id',\n      type: 'epub:type'\n    }\n  },\n  'text': {\n    REQUIRED: {\n      src: 'src'\n    },\n    OPTIONAL: {\n      id: 'id'\n    }\n  }\n};\n\n// this filters and gets the spine items that have a media overlay associated\n// with it.\nfunction getMediaOverlayItems(manifest) {\n  return manifest.items.filter(function (id) {\n    return manifest.byId[id].mediaOverlay;\n  });\n}\n\nfunction fetchAll(uri, items, manifest, path) {\n  return Promise.all(items.map(function (spineId) {\n    var smilId = manifest.byId[spineId].mediaOverlay;\n    var smilUri = manifest.byId[smilId].href;\n\n\n    return manifestItemXml(uri, smilUri, path).then(function (manifestItemsXml) {\n      return { manifestItemsXml: manifestItemsXml, smilUri: smilUri };\n    });\n  }));\n}\n\nfunction parseAll(items, manifest, metadata, uri) {\n  return function parseAllThunk(smilData$$1) {\n    var byId = {};\n    var i = 0;\n\n    smilData$$1.forEach(function (smilDetail, i) {\n      var spineId = items[i];\n      var smilId = manifest.byId[spineId].mediaOverlay;\n      var refinement = metadata.mediaOverlayDurations.find(function (mod) {\n        return mod.refines === '#' + smilId;\n      });\n      var baseUri = dirname(smilDetail.smilUri);\n      byId[smilId] = smilData(smilDetail.manifestItemsXml, smilId, refinement, baseUri);\n    });\n\n    return {\n      byId: byId,\n      items: items\n    };\n  };\n}\n\nfunction smil(uri, manifest, metadata, path) {\n  var items = getMediaOverlayItems(manifest);\n  return fetchAll(uri, items, manifest, path).then(function (smilData$$1) {\n    return parseAll(items, manifest, metadata, uri)(smilData$$1);\n  }).catch(function (error) {\n    return console.error(error);\n  });\n}\n\nfunction parseSmil(uri, manifest, metadata, packageDirectory) {\n  return smil(uri, manifest, metadata, packageDirectory);\n}\n\nfunction parseSingleSmil(src, id, refinement, baseUri) {\n    return xml(src).then(function (xml$$1) {\n        return smilData(xml$$1, id, refinement, dirname(src));\n    });\n}\n\nfunction index(src) {\n    return xml(src).then(function (xml$$1) {\n        return smilData(xml$$1, 'widget', {}, '/');\n    });\n}\n\nexports.parseBook = parse;\nexports.parseAllSmil = parseSmil;\nexports.parseSingleSmil = parseSingleSmil;\nexports.parseSmil = index;\n",
    "'use strict';\n\nvar id = 1;\n\nfunction index () {\n  return \"\" + id++;\n}\n\nmodule.exports = index;",
    "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"
  ]
}