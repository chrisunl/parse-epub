{"version":3,"sources":["node_modules/browser-pack/_prelude.js","index.js","node_modules/mini-unique-id/index.cjs.js","node_modules/process/browser.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","ParseEpub","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_interopDefault","ex","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","res","push","resolve","resolvedPath","resolvedAbsolute","arguments","path","process","cwd","TypeError","charAt","split","p","join","normalize","absolute","isAbsolute","trailingSlash","substr","paths","Array","prototype","slice","index","dirname","result","splitPath","root","dir","extname","items","xml","item","attributes","mediaTypeWhitelist","querySelectorAll","indexOf","getAttribute","mediaType","map","ret","Object","keys","forEach","key","exception","undefined","console","error","tag","normalise","list","byId","id","manifest","rootXml","querySelector","TAG","ITEM","ATTRIBUTES","coverHref","find","test","properties","href","metadata","attribute","attr","required","getElementsByTagNameNS","NS","textContent","TAG$1","ATTRIBUTES$1","OPTIONAL","REQUIRED","mediaDurationXml","META","PROPERTIES","mediaDuration","mediaOverlayDurations","refines","clockValue","mediaActiveClassXml","mediaActiveClass","mediaNarratorXml","mediaNarrator","rootFile","containerXml","packageDocumentPath","ROOT_FILE","FULL_PATH","spine","tocItem","TAG$2","ITEM$1","ATTRIBUTES$2","linear","YES","getTocItem","tocManifestId","toc","tocHtml","parse","snippet","label","parentId","level","hrefWithoutHash","tocItemPath","manifestId","ol","childNodes","children","node","tagName","link","childId","uniqueId","isLeaf","byManifestId","items$$1","TAG$3","ROOT","parseRaw","markup","contentType","XML","domParser","parseFromString","parseRawHtml","HTML","parseRawXml","uri","fetch","credentials","then","text","body","source","CONTAINER_XML","containerHtml","TOC_HTML","OPF_DIRECTORY","manifestMediaTypeWhitelist","packageDirectory","containerXml$$1","rootFile$$1","rootXml$$1","manifest$$1","spine$$1","catch","err","nextErr","message","manifestItemXml","canIgnoreNode","nodeType","Node","COMMENT_NODE","TEXT_NODE","parseClockValue","value","hours","mins","secs","HOURS","MINUTES","ms","MILLISECONDS","SECONDS","parseFloat","arr","TIME_SEPARATOR","pop","smilData","refinement","baseUri","smilXml","TAG$4","parse$1","BODY","version","VERSION","duration","getValidChildNodes","attrs","itemXml","val","Exception","NODES","nodeName","resolvePath","relativePath","AUDIO","src","clipBegin","clipEnd","PAR","audioTag","audio","isPar","TEXT","SEQ","_ret$src$split","_ret$src$split2","slicedToArray","srcFile","srcFragmentId","getMediaOverlayItems","mediaOverlay","fetchAll","Promise","all","spineId","smilId","smilUri","manifestItemsXml","parseAll","smilData$$1","smilDetail","mod","smil","parseSmil","parseSingleSmil","xml$$1","defineProperty","splitPathRe","filename","exec","str","start","len","DOMParser","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","isArray","textref","type","par","seq","parseBook","parseAllSmil","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","run","Item","array","noop","nextTick","args","apply","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","chdir","umask"],"mappings":"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","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar uniqueId = _interopDefault(require('mini-unique-id'));\n\n// These functions are lifted directly from https://www.npmjs.com/package/path-browserify\n// I have only included the ones that we are currently using - if we need any more in future: go get 'em!\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function splitPath(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\nfunction filter(xs, f) {\n  if (xs.filter) return xs.filter(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    if (f(xs[i], i, xs)) res.push(xs[i]);\n  }\n  return res;\n}\n\nvar substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {\n  return str.substr(start, len);\n} : function (str, start, len) {\n  if (start < 0) start = str.length + start;\n  return str.substr(start, len);\n};\n\nfunction resolve() {\n  var resolvedPath = '';\n  var resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = i >= 0 ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\nfunction normalize(path) {\n  var absolute = isAbsolute(path);\n  var trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function (p) {\n    return !!p;\n  }), !absolute).join('/');\n\n  if (!path && !absolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (absolute ? '/' : '') + path;\n}\n\nfunction isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\nfunction join() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return normalize(filter(paths, function (p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n}\n\nfunction dirname(path) {\n  var result = splitPath(path);\n  var root = result[0];\n  var dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\nfunction extname(path) {\n  return splitPath(path)[3];\n}\n\nfunction items(xml, item, attributes, mediaTypeWhitelist) {\n  return Array.prototype.filter.call(xml.querySelectorAll(item), function (item) {\n    return !mediaTypeWhitelist || mediaTypeWhitelist.indexOf(item.getAttribute(attributes.mediaType)) > -1;\n  }).map(function (item) {\n    var ret = {};\n\n    Object.keys(attributes).forEach(function (key) {\n      try {\n        ret[key] = item.getAttribute(attributes[key]);\n      } catch (exception) {\n        ret[key] = undefined;\n        console.error(\"Can't get \" + key + \" for \" + item + \" on \" + tag + \".\");\n      }\n    });\n\n    return ret;\n  });\n}\n\nfunction normalise(list) {\n  var byId = {};\n  var items = list.map(function (item) {\n    byId[item.id] = item;\n    return item.id;\n  });\n\n  return {\n    byId: byId,\n    items: items\n  };\n}\n\nvar ATTRIBUTES = {\n  href: 'href',\n  id: 'id',\n  mediaType: 'media-type',\n  mediaOverlay: 'media-overlay',\n  properties: 'properties'\n};\nvar ITEM = 'item';\nvar TAG = 'manifest';\n\nfunction manifest(rootXml, mediaTypeWhitelist) {\n  return normalise(items(rootXml.querySelector(TAG), ITEM, ATTRIBUTES, mediaTypeWhitelist));\n}\n\n// TODO\n// - content in the properties attribute may need to be parsed\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L420-L487\n\nfunction coverHref(manifest) {\n  var item = manifest.byId['cover-item'] || manifest.byId['cover'] || manifest.byId[Object.keys(manifest.byId).find(function (id) {\n    return (/cover-image/.test(manifest.byId[id].properties)\n    );\n  })];\n\n  if (item) {\n    return item.href;\n  }\n}\n\n// TODO\n// - Support ePub2 coverHref\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L395-L417\n\nvar ATTRIBUTES$1 = {\n  OPTIONAL: ['creator', 'contributor', 'coverage', 'creator', 'date', 'description', 'format', 'publisher', 'relation', 'rights', 'source', 'subject', 'type'],\n  REQUIRED: ['identifier', 'language', 'title'],\n  PROPERTIES: {\n    mediaActiveClass: 'media:active-class',\n    mediaDuration: 'media:duration',\n    mediaNarrator: 'media:narrator'\n  }\n};\nvar NS = '*';\nvar META = 'meta';\nvar TAG$1 = 'metadata';\n\nfunction metadata(rootXml, manifest) {\n  var ret = {};\n  var xml = rootXml.querySelector(TAG$1);\n\n  function attribute(attr, required) {\n    try {\n      ret[attr] = xml.getElementsByTagNameNS(NS, attr)[0].textContent;\n    } catch (exception) {\n      if (required) {\n        ret[attr] = undefined;\n        console.error('Can\\'t get required attribute \\'' + attr + '\\' on metadata.');\n      }\n    }\n  }\n\n  ATTRIBUTES$1.OPTIONAL.forEach(function (attr) {\n    return attribute(attr, false);\n  });\n  ATTRIBUTES$1.REQUIRED.forEach(function (attr) {\n    return attribute(attr, true);\n  });\n\n  ret.coverHref = coverHref(manifest);\n\n  var mediaDurationXml = xml.querySelectorAll(META + '[property=\\'' + ATTRIBUTES$1.PROPERTIES.mediaDuration + '\\']');\n  if (mediaDurationXml.length) {\n    ret.mediaOverlayDurations = [];\n    ret.mediaDuration;\n    Array.prototype.forEach.call(mediaDurationXml, function (item) {\n      var refines = item.getAttribute('refines');\n\n      if (refines) {\n        // If refines is specified, it's a media overlay duration\n        ret.mediaOverlayDurations.push({\n          refines: item.getAttribute('refines'),\n          clockValue: item.textContent\n        });\n      } else {\n        // Otherwise it's the whole publication's duration\n        ret.mediaDuration = item.textContent;\n      }\n    });\n  }\n\n  var mediaActiveClassXml = xml.querySelector(META + '[property=\\'' + ATTRIBUTES$1.PROPERTIES.mediaActiveClass + '\\']');\n  if (mediaActiveClassXml) {\n    ret.mediaActiveClass = mediaActiveClassXml.textContent;\n  }\n\n  var mediaNarratorXml = xml.querySelectorAll(META + '[property=\\'' + ATTRIBUTES$1.PROPERTIES.mediaNarrator + '\\']');\n  if (mediaNarratorXml.length) {\n    ret.mediaNarrator = Array.prototype.map.call(mediaNarratorXml, function (item) {\n      return item.textContent;\n    });\n  }\n\n  return ret;\n}\n\n// TODO\n// - refactor!\n// - updateMetadataWithIBookProperties\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L96-L130\n// - refinements\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L262-L279\n//   http://www.idpf.org/epub/301/spec/epub-publications.html#sec-metadata-elem\n// - rendition\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L241-L261\n// - more media attributes?\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L310-L322\n\nvar ROOT_FILE = 'rootfile';\nvar FULL_PATH = 'full-path';\n\nfunction rootFile(containerXml) {\n  var packageDocumentPath = containerXml.querySelector(ROOT_FILE).getAttribute(FULL_PATH);\n  if (extname(packageDocumentPath) === '.opf') {\n    return packageDocumentPath;\n  } else {\n    throw new Error('no .opf file could be found in META-INF/container.xml');\n  }\n}\n\nvar ATTRIBUTES$2 = {\n  id: 'idref',\n  linear: 'linear',\n  properties: 'properties'\n};\nvar ITEM$1 = 'itemref';\nvar TAG$2 = 'spine';\nvar YES = 'yes';\n\nfunction spine(rootXml, tocItem) {\n  return normalise(items(rootXml.querySelector(TAG$2), ITEM$1, ATTRIBUTES$2).filter(function (item) {\n    return typeof tocItem === 'undefined' ? true : tocItem.id !== item.id;\n  }).map(function (item) {\n    return {\n      id: item.id,\n      linear: item.linear === YES,\n      properties: item.properties\n    };\n  }));\n}\n\n// TODO\n// - page-progression-direction\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L68\n\nfunction getTocItem(manifest) {\n  var tocManifestId = manifest.items.find(function (id) {\n    return (/nav/.test(manifest.byId[id].properties)\n    );\n  });\n  return manifest.byId[tocManifestId];\n}\n\n// Spec says we need to select the TOC using the epub:type=toc property\nvar TAG$3 = 'nav[epub\\\\\\:type~=toc]';\nvar ROOT = '__root__';\n\nfunction toc(tocHtml, manifest, spine) {\n  var byId = {};\n  var byManifestId = {};\n  var items$$1 = [];\n\n  var tocItem = getTocItem(manifest);\n  var tocItemPath = dirname(tocItem.href);\n  parse(tocHtml.querySelector(TAG$3), ROOT);\n\n  function parse(snippet, id, href, label, parentId) {\n    var level = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n    var hrefWithoutHash = href && join(tocItemPath, href.split('#')[0]);\n    var manifestId = Object.keys(manifest.byId).find(function (id) {\n      return manifest.byId[id].href === hrefWithoutHash;\n    });\n\n    // Don't include the TOC reference item in the spine\n    if (tocItem.id !== manifestId) {\n      var ol = snippet.querySelector('ol');\n      var childNodes = [];\n\n      if (ol) {\n        childNodes = Array.prototype.filter.call(ol.children, function (node) {\n          return node.tagName === 'LI';\n        }).map(function (node) {\n          var link = node.querySelector('a');\n          var childId = uniqueId();\n          return parse(node, childId, link.getAttribute('href'), link.textContent, id, level + 1) && childId;\n        }).filter(function (id) {\n          return id;\n        });\n      }\n\n      var isLeaf = childNodes.length === 0;\n\n      // We mainly care about leafs as those are the ones that contain pages and are thus open\n      if (isLeaf) {\n        byManifestId[manifestId] = id;\n        items$$1.push(id);\n      }\n\n      byId[id] = {\n        childNodes: childNodes,\n        id: id,\n        isLeaf: isLeaf,\n        href: hrefWithoutHash,\n        label: label,\n        level: level,\n        linear: snippet.getAttribute('linear'),\n        manifestId: manifestId,\n        parentId: parentId\n      };\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return {\n    byId: byId,\n    byManifestId: byManifestId,\n    items: items$$1\n  };\n}\n\n// TODO\n// - page-progression-direction\n//   https://github.com/dariocravero/readium-js/blob/master/src/epub/package-document-parser.js#L68\n\n/* global DOMParser */\n\nvar HTML = 'text/html';\nvar XML = 'text/xml';\nvar domParser = new DOMParser();\n\nfunction parseRaw(markup) {\n  var contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : XML;\n\n  return domParser.parseFromString(markup, contentType);\n}\n\nfunction parseRawHtml(markup) {\n  return parseRaw(markup, HTML);\n}\n\nfunction parseRawXml(markup) {\n  return parseRaw(markup, XML);\n}\n\nfunction xml(uri) {\n  return fetch(uri, { credentials: 'include' }).then(function (res) {\n    return res.text();\n  }).then(function (body) {\n    return parseRawXml(body);\n  });\n}\n\nvar CONTAINER_XML = 'META-INF/container.xml';\n\nfunction containerXml(uri) {\n  var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CONTAINER_XML;\n\n  return xml(uri + '/' + source);\n}\n\nfunction rootXml(uri, source) {\n  return xml(uri + '/' + source);\n}\n\nvar TOC_HTML = 'toc.xhtml';\nvar OPF_DIRECTORY = 'OPS';\n\nfunction containerHtml(uri) {\n  var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TOC_HTML;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : OPF_DIRECTORY;\n\n  return fetch(uri + '/' + path + '/' + source, { credentials: 'include' }).then(function (res) {\n    return res.text();\n  }).then(function (body) {\n    return parseRawHtml(body);\n  });\n}\n\nfunction parse(uri) {\n  var manifestMediaTypeWhitelist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var packageDirectory = void 0;\n\n  return containerXml(uri).then(function (containerXml$$1) {\n    return rootFile(containerXml$$1);\n  }).then(function (rootFile$$1) {\n    packageDirectory = dirname(rootFile$$1);\n    return rootXml(uri, rootFile$$1);\n  }).then(function (rootXml$$1) {\n    var manifest$$1 = manifest(rootXml$$1, manifestMediaTypeWhitelist);\n    var tocItem = getTocItem(manifest$$1);\n    var spine$$1 = spine(rootXml$$1, tocItem);\n\n    return containerHtml(uri, tocItem.href, packageDirectory).then(function (tocHtml) {\n      return {\n        packageDirectory: packageDirectory,\n        manifest: manifest$$1,\n        metadata: metadata(rootXml$$1, manifest$$1),\n        spine: spine$$1,\n        toc: toc(tocHtml, manifest$$1, spine$$1)\n      };\n    });\n  }).catch(function (err) {\n    var nextErr = err;\n\n    if (/Cannot read property 'getAttribute' of null/.test(err.message)) {\n      nextErr = new Error('We couldn\\'t find a book at ' + uri + '.');\n    }\n\n    throw nextErr;\n  });\n}\n\nfunction manifestItemXml(uri, source, path) {\n  return xml(uri + '/' + path + '/' + source);\n}\n\n// this function will return DOM parsed nodes that are not comments or text nodes containing whitespace\nfunction canIgnoreNode(node) {\n  return !(node.nodeType === window.Node.COMMENT_NODE || node.nodeType === window.Node.TEXT_NODE && !/[^\\t\\n\\r ]/.test(node.textContent));\n}\n\nvar HOURS = 'h';\nvar MINUTES = 'min';\nvar MILLISECONDS = 'ms';\nvar SECONDS = 's';\nvar TIME_SEPARATOR = ':';\n\n// https://github.com/dariocravero/readium-js/blob/master/src/epub/smil-document-parser.js#L213-L243\n// parse the timestamp and return the value in seconds\n// supports this syntax:\n// http://idpf.org/epub/30/spec/epub30-mediaoverlays.html#app-clock-examples\nfunction parseClockValue(value) {\n  if (!value) return 0;\n\n  var hours = 0;\n  var mins = 0;\n  var secs = 0;\n\n  var index = {\n    hours: value.indexOf(HOURS),\n    mins: value.indexOf(MINUTES),\n    ms: value.indexOf(MILLISECONDS),\n    secs: value.indexOf(SECONDS)\n  };\n\n  if (index.mins !== -1) {\n    mins = parseFloat(value.substr(0, index.mins), 10);\n  } else if (index.ms !== -1) {\n    var ms = parseFloat(value.substr(0, index.ms), 10);\n    secs = ms / 1000;\n  } else if (index.secs !== -1) {\n    secs = parseFloat(value.substr(0, index.secs), 10);\n  } else if (index.hours !== -1) {\n    hours = parseFloat(value.substr(0, index.hours), 10);\n  } else {\n    // parse as hh:mm:ss.fraction\n    // this also works for seconds-only, e.g. 12.345\n    var arr = value.split(TIME_SEPARATOR);\n    secs = parseFloat(arr.pop(), 10);\n    if (arr.length > 0) {\n      mins = parseFloat(arr.pop(), 10);\n      if (arr.length > 0) {\n        hours = parseFloat(arr.pop(), 10);\n      }\n    }\n  }\n\n  return hours * 3600 + mins * 60 + secs;\n}\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar AUDIO = 'audio';\nvar BODY = 'body';\nvar PAR = 'par';\nvar SEQ = 'seq';\nvar TAG$4 = 'smil';\nvar TEXT = 'text';\nvar VERSION = 'version';\n\n// TODO the parsing of the `clockValue` could be deferred\n// up to when its used. We put it in here to comply with Readium's data structure needs.\nfunction smilData(xml, id) {\n  var refinement = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var baseUri = arguments[3];\n\n  var smilXml = xml.querySelector(TAG$4);\n\n  var ret = {\n    body: parse$1(smilXml.querySelector(BODY), baseUri),\n    id: id,\n    version: smilXml.getAttribute(VERSION)\n  };\n\n  if (refinement.clockValue) {\n    ret.duration = parseClockValue(refinement.clockValue);\n  }\n  return ret;\n}\n\nfunction getValidChildNodes(xml) {\n  return Array.prototype.filter.call(xml.childNodes, canIgnoreNode);\n}\n\nfunction attrs(itemXml) {\n  var node = NODES[itemXml.nodeName];\n  var ret = {};\n\n  function attr(key, attr, required) {\n    try {\n      var val = itemXml.getAttribute(attr);\n      if (val) {\n        ret[key] = val;\n      } else {\n        throw Exception('Attribute tag ' + attr + ' exists but there\\'s no value.');\n      }\n    } catch (exception) {\n      if (required) {\n        ret[key] = false;\n        console.error('Can\\'t get required attribute \\'' + attr + '\\' for key \\'' + key + '\\' on smil.', itemXml);\n        console.error(exception);\n      }\n    }\n  }\n\n  Object.keys(node.OPTIONAL).forEach(function (key) {\n    return attr(key, node.OPTIONAL[key], false);\n  });\n  Object.keys(node.REQUIRED).forEach(function (key) {\n    return attr(key, node.REQUIRED[key], true);\n  });\n\n  return ret;\n}\n\nfunction resolvePath(baseUri, relativePath) {\n  return resolve(baseUri, relativePath);\n}\n\nfunction parse$1(xml, baseUri) {\n  var ret = void 0;\n\n  switch (xml.nodeName) {\n    case AUDIO:\n      ret = attrs(xml);\n      if (ret.src && !isAbsolute(ret.src)) {\n        ret.src = resolvePath(baseUri, ret.src);\n      }\n      ret.clipBegin = ret.clipBegin && parseClockValue(ret.clipBegin);\n      ret.clipEnd = ret.clipEnd && parseClockValue(ret.clipEnd);\n      break;\n\n    case PAR:\n      ret = attrs(xml);\n      // handle the fact that audio tags are optional\n      var audioTag = xml.querySelector(AUDIO);\n      if (audioTag) {\n        ret.audio = parse$1(audioTag, baseUri);\n      }\n      ret.isPar = true;\n      ret.text = parse$1(xml.querySelector(TEXT), baseUri);\n      break;\n\n    case BODY:\n    case SEQ:\n      ret = attrs(xml);\n      ret.childNodes = getValidChildNodes(xml).map(function (arr) {\n        return parse$1(arr, baseUri);\n      });\n      ret.isPar = false;\n      break;\n\n    case TEXT:\n      ret = attrs(xml);\n      if (ret.src && !isAbsolute(ret.src)) {\n        ret.src = resolvePath(baseUri, ret.src);\n      }\n\n      var _ret$src$split = ret.src.split('#'),\n          _ret$src$split2 = slicedToArray(_ret$src$split, 2),\n          srcFile = _ret$src$split2[0],\n          srcFragmentId = _ret$src$split2[1];\n\n      ret.srcFile = srcFile;\n      ret.srcFragmentId = srcFragmentId;\n      break;\n\n    default:\n      break;\n  }\n\n  return ret;\n}\n\nvar NODES = {\n  'audio': {\n    REQUIRED: {\n      src: 'src'\n    },\n    OPTIONAL: {\n      id: 'id',\n      clipBegin: 'clipBegin',\n      clipEnd: 'clipEnd'\n    }\n  },\n  'body': {\n    REQUIRED: {},\n    OPTIONAL: {\n      id: 'id',\n      textref: 'epub:textref',\n      type: 'epub:type'\n    }\n  },\n  'par': {\n    REQUIRED: {},\n    OPTIONAL: {\n      id: 'id',\n      textref: 'epub:textref',\n      type: 'epub:type'\n    }\n  },\n  'seq': {\n    REQUIRED: {\n      textref: 'epub:textref'\n    },\n    OPTIONAL: {\n      id: 'id',\n      type: 'epub:type'\n    }\n  },\n  'text': {\n    REQUIRED: {\n      src: 'src'\n    },\n    OPTIONAL: {\n      id: 'id'\n    }\n  }\n};\n\n// this filters and gets the spine items that have a media overlay associated\n// with it.\nfunction getMediaOverlayItems(manifest) {\n  return manifest.items.filter(function (id) {\n    return manifest.byId[id].mediaOverlay;\n  });\n}\n\nfunction fetchAll(uri, items, manifest, path) {\n  return Promise.all(items.map(function (spineId) {\n    var smilId = manifest.byId[spineId].mediaOverlay;\n    var smilUri = manifest.byId[smilId].href;\n\n\n    return manifestItemXml(uri, smilUri, path).then(function (manifestItemsXml) {\n      return { manifestItemsXml: manifestItemsXml, smilUri: smilUri };\n    });\n  }));\n}\n\nfunction parseAll(items, manifest, metadata, uri) {\n  return function parseAllThunk(smilData$$1) {\n    var byId = {};\n    var i = 0;\n\n    smilData$$1.forEach(function (smilDetail, i) {\n      var spineId = items[i];\n      var smilId = manifest.byId[spineId].mediaOverlay;\n      var refinement = metadata.mediaOverlayDurations.find(function (mod) {\n        return mod.refines === '#' + smilId;\n      });\n      var baseUri = dirname(smilDetail.smilUri);\n      byId[smilId] = smilData(smilDetail.manifestItemsXml, smilId, refinement, baseUri);\n    });\n\n    return {\n      byId: byId,\n      items: items\n    };\n  };\n}\n\nfunction smil(uri, manifest, metadata, path) {\n  var items = getMediaOverlayItems(manifest);\n  return fetchAll(uri, items, manifest, path).then(function (smilData$$1) {\n    return parseAll(items, manifest, metadata, uri)(smilData$$1);\n  }).catch(function (error) {\n    return console.error(error);\n  });\n}\n\nfunction parseSmil(uri, manifest, metadata, packageDirectory) {\n  return smil(uri, manifest, metadata, packageDirectory);\n}\n\nfunction parseSingleSmil(src, id, refinement, baseUri) {\n    return xml(src).then(function (xml$$1) {\n        return smilData(xml$$1, id, refinement, dirname(src));\n    });\n}\n\nfunction index(src) {\n    return xml(src).then(function (xml$$1) {\n        return smilData(xml$$1, 'widget', {}, '/');\n    });\n}\n\nexports.parseBook = parse;\nexports.parseAllSmil = parseSmil;\nexports.parseSingleSmil = parseSingleSmil;\nexports.parseSmil = index;\n","'use strict';\n\nvar id = 1;\n\nfunction index () {\n  return \"\" + id++;\n}\n\nmodule.exports = index;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"]}